##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# 2024-03-12 weiyuai.cn
server {
	listen 80;
	listen [::]:80;

	root /var/www/html/weiyuai/;
	index index.html index.htm index.nginx-debian.html;

    server_name api.weiyuai.cn;

    ## 反向代理
    # https代理stomp连接
    location /stomp {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://weiyuai/stomp;

        # 为记录真实ip地址，而不是反向代理服务器地址
        proxy_set_header  Host            $host;
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        include           fastcgi_params;
    }

    ## 反向代理
    # https代理websocket连接
    location /websocket {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://weiyuaiwss/websocket;

        # 为记录真实ip地址，而不是反向代理服务器地址
        proxy_set_header  Host            $host;
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        include           fastcgi_params;
    }

    #增加两头部
    add_header X-Via $server_addr;
    add_header X-Cache $upstream_cache_status;

    ## 反向代理
    location @springboot {
		# 将nginx所有请求均跳转到9003端口
        proxy_pass http://weiyuai;
        
        # 为记录真实ip地址，而不是反向代理服务器地址
        proxy_set_header  Host            $host;
        #  X-Real-IP 让日志的IP显示真实的客户端的IP
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        include           fastcgi_params;

        # 设置缓存
        # 为应答代码为200和302的设置缓存时间为10分钟，404代码缓存10分钟。
        #proxy_cache webserver;
        # proxy_cache_valid  200 302  10m;
        proxy_cache_valid  404      10m;
	}

	location / {
        # First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
		try_files $uri $uri/ @springboot;
	}
}

server {
	listen 80;
	listen [::]:80;

	root /var/www/html/weiyuai/;
	index index.html index.htm index.nginx-debian.html;

    server_name weiyuai.cn *.weiyuai.cn;

	location / {
        # 匹配所有路径，并尝试首先提供文件，然后目录，最后回退到index.html
        try_files $uri $uri/ /index.html; # 这里应该指向根目录的index.html，而不是特定路径下的index.html
    }

    # 如果需要为每个子路径提供特定的index.html，您可以添加额外的location块
    location /admin/ {
        try_files $uri $uri/ /admin/index.html;
    }

    location /agent/ {
        try_files $uri $uri/ /agent/index.html;
    }

    location /chat/ {
        try_files $uri $uri/ /chat/index.html;
    }

    location /frame/ {
        try_files $uri $uri/ /chat/index.html;
    }

    location /docs/ {
        try_files $uri $uri/ /docs/index.html;
    }
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	ssl_certificate /etc/letsencrypt/live/weiyuai.cn/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/weiyuai.cn/privkey.pem; # managed by Certbot

	server_name api.weiyuai.cn;

	root /var/www/html/weiyuai;
	index index.html index.htm index.nginx-debian.html;

    ## 反向代理
    # https代理stomp连接
    location /stomp {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://weiyuai/stomp;

        # 为记录真实ip地址，而不是反向代理服务器地址
        proxy_set_header  Host            $host;
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        include           fastcgi_params;
    }

    ## 反向代理
    # https代理websocket连接
    location /websocket {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://weiyuaiwss/websocket;

        # 为记录真实ip地址，而不是反向代理服务器地址
        proxy_set_header  Host            $host;
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        include           fastcgi_params;
    }

    #增加两头部
    add_header X-Via $server_addr;
    add_header X-Cache $upstream_cache_status;

    ## 反向代理
    location @springboot {
		# 将nginx所有请求均跳转到9003端口
        proxy_pass http://weiyuai;

        # add_header Access-Control-Allow-Origin *; # 报错，不能添加，需要在spring boot中去掉相应的origin
        # 为记录真实ip地址，而不是反向代理服务器地址
        proxy_set_header  Host            $host;
        #  X-Real-IP 让日志的IP显示真实的客户端的IP
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        include           fastcgi_params;

        # 设置缓存
        # 为应答代码为200和302的设置缓存时间为10分钟，404代码缓存10分钟。
        #proxy_cache webserver;
        #proxy_cache_valid  200 302  10m;
        proxy_cache_valid  404      10m;
	}

	location / {
        # First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
		try_files $uri $uri/ @springboot;
	}
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	ssl_certificate /etc/letsencrypt/live/weiyuai.cn/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/weiyuai.cn/privkey.pem; # managed by Certbot

	server_name weiyuai.cn *.weiyuai.cn;

	root /var/www/html/weiyuai;
	index index.html index.htm index.nginx-debian.html;

	location / {
        # 匹配所有路径，并尝试首先提供文件，然后目录，最后回退到index.html
        try_files $uri $uri/ /index.html; # 这里应该指向根目录的index.html，而不是特定路径下的index.html
    }

    # 如果需要为每个子路径提供特定的index.html，您可以添加额外的location块
    location /admin/ {
        try_files $uri $uri/ /admin/index.html;
    }

    location /agent/ {
        try_files $uri $uri/ /agent/index.html;
    }

    location /chat/ {
        try_files $uri $uri/ /chat/index.html;
    }

    location /frame/ {
        try_files $uri $uri/ /chat/index.html;
    }

    location /docs/ {
        try_files $uri $uri/ /docs/index.html;
    }

}

# ai.bytedesk.com
server {
	listen 80;
	listen [::]:80;

	root /var/www/html/weiyuai/;
	index index.html index.htm index.nginx-debian.html;

    server_name _;
}

# https ai.bytedesk.com
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	ssl_certificate /etc/letsencrypt/live/bytedesk.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/bytedesk.com/privkey.pem; # managed by Certbot

	root /var/www/html/weiyuai/;
	index index.html index.htm index.nginx-debian.html;

    server_name ai.bytedesk.com;
}
