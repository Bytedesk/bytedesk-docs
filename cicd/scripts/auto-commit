###
 # @Author: jackning 270580156@qq.com
 # @Date: 2025-02-04 10:51:43
 # @LastEditors: jackning 270580156@qq.com
 # @LastEditTime: 2025-02-11 11:23:29
 # @Description: bytedesk.com https://github.com/Bytedesk/bytedesk
 #   Please be aware of the BSL license restrictions before installing Bytedesk IM – 
 #  selling, reselling, or hosting Bytedesk IM as a service is a breach of the terms and automatically terminates your rights under the license. 
 #  Business Source License 1.1: https://github.com/Bytedesk/bytedesk/blob/main/LICENSE 
 #  contact: 270580156@qq.com 
 # 
 # Copyright (c) 2025 by bytedesk.com, All Rights Reserved. 
### 
#!/bin/bash

# 设置工作目录为项目根目录
cd "$(dirname "$0")/../.."

# 关闭 SSL 验证（如果你信任该仓库）
git config --global http.sslVerify false

generate_commit_message() {
    # 获取修改的文件列表
    local files_changed=$(git diff --cached --name-status)
    local message=""
    
    # 统计新增、修改、删除的文件数
    local added=$(echo "$files_changed" | grep "^A" | wc -l)
    local modified=$(echo "$files_changed" | grep "^M" | wc -l)
    local deleted=$(echo "$files_changed" | grep "^D" | wc -l)
    
    # 获取主要修改的目录
    local main_dirs=$(echo "$files_changed" | awk '{print $2}' | awk -F/ '{print $1"/"$2}' | sort | uniq -c | sort -nr | head -1 | awk '{print $2}')
    
    # 生成简要的提交信息
    if [ ! -z "$main_dirs" ]; then
        message="update ${main_dirs}: "
        if [ $added -gt 0 ]; then
            message+="add $added "
        fi
        if [ $modified -gt 0 ]; then
            message+="mod $modified "
        fi
        if [ $deleted -gt 0 ]; then
            message+="del $deleted "
        fi
        message+="files"
    else
        message="update: general changes"
    fi
    
    echo "$message"
}


while true; do
    # 获取当前时间
    timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    # 检查是否有未提交的更改
    if [[ -n $(git status -s) ]]; then
        echo "[$timestamp] 检测到更改，准备提交..."
        
        # 添加所有更改
        git add .
        
        # 生成提交信息
        commit_msg=$(generate_commit_message)
        
        # 提交更改
        git commit -m "$commit_msg"
        
        # 推送到远程仓库
        git push || {
            echo "[$timestamp] 推送失败，等待下次尝试..."
            continue
        }
        
        echo "[$timestamp] 提交完成"
    else
        echo "[$timestamp] 没有检测到更改"
    fi
    
    # 等待30分钟
    sleep 1800
done
